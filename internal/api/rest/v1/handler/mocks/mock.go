// Code generated by MockGen. DO NOT EDIT.
// Source: init.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	handler "github.com/resyahrial/go-template/internal/api/rest/v1/handler"
	entities "github.com/resyahrial/go-template/internal/entities"
)

// MockJsonRequestBinderAdapater is a mock of JsonRequestBinderAdapater interface.
type MockJsonRequestBinderAdapater struct {
	ctrl     *gomock.Controller
	recorder *MockJsonRequestBinderAdapaterMockRecorder
}

// MockJsonRequestBinderAdapaterMockRecorder is the mock recorder for MockJsonRequestBinderAdapater.
type MockJsonRequestBinderAdapaterMockRecorder struct {
	mock *MockJsonRequestBinderAdapater
}

// NewMockJsonRequestBinderAdapater creates a new mock instance.
func NewMockJsonRequestBinderAdapater(ctrl *gomock.Controller) *MockJsonRequestBinderAdapater {
	mock := &MockJsonRequestBinderAdapater{ctrl: ctrl}
	mock.recorder = &MockJsonRequestBinderAdapaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJsonRequestBinderAdapater) EXPECT() *MockJsonRequestBinderAdapaterMockRecorder {
	return m.recorder
}

// BindJSON mocks base method.
func (m *MockJsonRequestBinderAdapater) BindJSON(obj any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BindJSON", obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// BindJSON indicates an expected call of BindJSON.
func (mr *MockJsonRequestBinderAdapaterMockRecorder) BindJSON(obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BindJSON", reflect.TypeOf((*MockJsonRequestBinderAdapater)(nil).BindJSON), obj)
}

// MockBodyConverterAdapter is a mock of BodyConverterAdapter interface.
type MockBodyConverterAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockBodyConverterAdapterMockRecorder
}

// MockBodyConverterAdapterMockRecorder is the mock recorder for MockBodyConverterAdapter.
type MockBodyConverterAdapterMockRecorder struct {
	mock *MockBodyConverterAdapter
}

// NewMockBodyConverterAdapter creates a new mock instance.
func NewMockBodyConverterAdapter(ctrl *gomock.Controller) *MockBodyConverterAdapter {
	mock := &MockBodyConverterAdapter{ctrl: ctrl}
	mock.recorder = &MockBodyConverterAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBodyConverterAdapter) EXPECT() *MockBodyConverterAdapterMockRecorder {
	return m.recorder
}

// GetCreateUserRequest mocks base method.
func (m *MockBodyConverterAdapter) GetCreateUserRequest(c handler.JsonRequestBinderAdapater) (*entities.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreateUserRequest", c)
	ret0, _ := ret[0].(*entities.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCreateUserRequest indicates an expected call of GetCreateUserRequest.
func (mr *MockBodyConverterAdapterMockRecorder) GetCreateUserRequest(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreateUserRequest", reflect.TypeOf((*MockBodyConverterAdapter)(nil).GetCreateUserRequest), c)
}
